{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full-Stack\\\\Front-End\\\\Reactjs\\\\src\\\\Component\\\\FunctionalComponent\\\\15UseMemoHooksInFunctionalCompo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FunctionalCompoUseMemo = () => {\n  _s();\n  const [number, setNumber] = useState(1);\n  const [inc, setInc] = useState(0);\n  const factorial = useMemo(() => factorialOf(number), [number]);\n  // const factorial =  factorialOf(number);\n  console.log(\"factorial\", factorial);\n  const onChange = event => {\n    setNumber(Number(event.target.value));\n  };\n  const onClick = () => setInc(i => i + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What is useMemo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"alert alert-info\",\n      children: [\"The React useMemo Hook returns a memoized \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 83\n      }, this), \"Think of memoization as caching a value so that it does not need to be recalculated. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 102\n      }, this), \"The useMemo Hook only runs when one of its dependencies update. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 81\n      }, this), \"This can improve performance. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 47\n      }, this), \"The useMemo and useCallback Hooks are similar. The main difference is that useMemo returns a memoized value and useCallback returns a memoized function. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 170\n      }, this), \"The useMemoHook accepts a second parameter to declare dependencies. The expensive function will only run when its dependencies have changed.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/usememo.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), \"Factorial of\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: number,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), \"is \", factorial, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Re-render\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://dmitripavlutin.com/react-usememo-hook/\",\n      children: \"Reference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(FunctionalCompoUseMemo, \"jhcjN+C5X6Em2rhDIcqGss6liEU=\");\n_c = FunctionalCompoUseMemo;\nfunction factorialOf(n) {\n  console.log('factorialOf(n) called!');\n  return n <= 0 ? 1 : n * factorialOf(n - 1);\n}\nexport default FunctionalCompoUseMemo;\nvar _c;\n$RefreshReg$(_c, \"FunctionalCompoUseMemo\");","map":{"version":3,"names":["React","useMemo","useState","jsxDEV","_jsxDEV","FunctionalCompoUseMemo","_s","number","setNumber","inc","setInc","factorial","factorialOf","console","log","onChange","event","Number","target","value","onClick","i","children","fileName","_jsxFileName","lineNumber","columnNumber","class","src","alt","type","href","_c","n","$RefreshReg$"],"sources":["E:/Full-Stack/Front-End/Reactjs/src/Component/FunctionalComponent/15UseMemoHooksInFunctionalCompo.jsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\n\r\nconst FunctionalCompoUseMemo = () => {\r\n    const [number, setNumber] = useState(1);\r\n    const [inc, setInc] = useState(0);\r\n    const factorial = useMemo(() => factorialOf(number), [number]);\r\n    // const factorial =  factorialOf(number);\r\n    console.log(\"factorial\", factorial);\r\n    const onChange = event => {\r\n        setNumber(Number(event.target.value));\r\n    };\r\n    const onClick = () => setInc(i => i + 1);\r\n    return (\r\n        <div>\r\n            <h2>What is useMemo</h2>\r\n            <p class=\"alert alert-info\">The React useMemo Hook returns a memoized <br />\r\n\r\n                Think of memoization as caching a value so that it does not need to be recalculated. <br />\r\n\r\n                The useMemo Hook only runs when one of its dependencies update. <br />\r\n\r\n                This can improve performance. <br />\r\n\r\n                The useMemo and useCallback Hooks are similar. The main difference is that useMemo returns a memoized value and useCallback returns a memoized function. <br />\r\n                The useMemoHook accepts a second parameter to declare dependencies. The expensive function will only run when its dependencies have changed.</p>\r\n            <img src=\"/usememo.png\" alt=\"\" />\r\n            <br />\r\n            Factorial of\r\n            <input type=\"number\" value={number} onChange={onChange} />\r\n            is {factorial}\r\n            <button onClick={onClick}>Re-render</button>\r\n            <a href=\"https://dmitripavlutin.com/react-usememo-hook/\">Reference</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction factorialOf(n) {\r\n    console.log('factorialOf(n) called!');\r\n    return n <= 0 ? 1 : n * factorialOf(n - 1);\r\n}\r\nexport default FunctionalCompoUseMemo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}