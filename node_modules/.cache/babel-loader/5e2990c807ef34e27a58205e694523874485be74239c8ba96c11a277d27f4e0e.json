{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full-Stack\\\\Front-End\\\\Reactjs\\\\src\\\\Component\\\\FunctionalComponent\\\\13UseRefEffectHooksInFunctionalCompo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseRefEffectHooksInFunctionalCompo = () => {\n  _s();\n  const [data, anything] = useState(null);\n  const focusPoint = useRef(null);\n  const onClickHandler = event => {\n    // console.log(focusPoint);\n    console.log(event);\n    console.log(event.target);\n    // console.log(focusPoint.current);\n    // console.log(focusPoint.current.value);\n    focusPoint.current.value = \"The quick brown fox jumps over the lazy dog\";\n    focusPoint.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"What is useRef\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"useRef is a React Hook that lets you reference a value that\\u2019s not needed for rendering. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 112\n          }, this), \"const ref = useRef(initialValue) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"1. Reference \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), \"useRef(initialValue) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"2. Usage \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), \"a.Referencing a value with a ref \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 58\n          }, this), \"b. Manipulating the DOM with a ref \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 60\n          }, this), \"c. Avoiding recreating the ref contents \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Troubleshooting \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), \"I can\\u2019t get a ref to a custom component\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickHandler,\n          children: \"ACTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Click on the action button to focus and populate the text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: focusPoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: event => {\n          console.log(event);\n          console.log(event.target);\n          console.log(event.target.value);\n          // anything(\"test\")\n          anything(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(UseRefEffectHooksInFunctionalCompo, \"coJLPH3jIqAFeFu6MLG4QJLhhPQ=\");\n_c = UseRefEffectHooksInFunctionalCompo;\nexport default UseRefEffectHooksInFunctionalCompo;\nvar _c;\n$RefreshReg$(_c, \"UseRefEffectHooksInFunctionalCompo\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","UseRefEffectHooksInFunctionalCompo","_s","data","anything","focusPoint","onClickHandler","event","console","log","target","current","value","focus","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","onChange","_c","$RefreshReg$"],"sources":["E:/Full-Stack/Front-End/Reactjs/src/Component/FunctionalComponent/13UseRefEffectHooksInFunctionalCompo.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nconst UseRefEffectHooksInFunctionalCompo = () => {\n    const [data, anything] = useState(null)\n    const focusPoint = useRef(null)\n    const onClickHandler = (event) => {\n\n        // console.log(focusPoint);\n        console.log(event);\n        console.log(event.target);\n        // console.log(focusPoint.current);\n        // console.log(focusPoint.current.value);\n        focusPoint.current.value = \"The quick brown fox jumps over the lazy dog\";\n        focusPoint.current.focus();\n    }\n    return (\n        <>\n            <div className=\"container\">\n                <div className='alert alert-info'>\n                    <h2>What is useRef</h2>\n                    <p>useRef is a React Hook that lets you reference a value that’s not needed for rendering. <br />\n\n                        const ref = useRef(initialValue) <br />\n                        <h4>1. Reference <br /></h4>\n                        useRef(initialValue) <br />\n                        <h4>2. Usage <br /></h4>\n                        a.Referencing a value with a ref <br />\n                        b. Manipulating the DOM with a ref <br />\n                        c. Avoiding recreating the ref contents <br />\n                        <h4>Troubleshooting <br /></h4>\n                        I can’t get a ref to a custom component</p>\n                </div>\n                <div>\n                    <button onClick={onClickHandler}>\n                        ACTION\n                    </button>\n                </div>\n                <label>\n                    Click on the action button to\n                    focus and populate the text.\n                </label><br />\n                <textarea ref={focusPoint} />\n                <textarea onChange={(event) => {\n                    console.log(event);\n                    console.log(event.target);\n                    console.log(event.target.value);\n                    // anything(\"test\")\n                    anything(event.target.value)\n                }} />\n                {data}\n            </div>\n        </>\n    );\n};\n\nexport default UseRefEffectHooksInFunctionalCompo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}